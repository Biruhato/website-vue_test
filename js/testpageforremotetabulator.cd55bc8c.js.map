{"version":3,"sources":["webpack:///./src/views/TestPageForRemoteTabulator.vue?f584","webpack:///./src/helperFunctions/remotePaginationTable.js","webpack:///src/views/TestPageForRemoteTabulator.vue","webpack:///./src/views/TestPageForRemoteTabulator.vue?3fd1","webpack:///./src/views/TestPageForRemoteTabulator.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","sectionTitle","staticClass","on","remotePaginationCall","_v","staticRenderFns","createRemoteTable","id","cols","data","vm","table","Tabulator","layout","height","pagination","ajaxURL","ajaxConfig","method","mode","paginationSize","movableColumns","resizableRows","columns","tableBuilt","createTooltips","rowClick","e","row","getData","$store","commit","dataLoaded","lenDiv","$","find","text","length","pageSelect","empty","selected","children","val","numPages","Math","ceil","i","append","attr","dataFiltered","filters","rows","cellMouseEnter","cell","cellEl","getElement","tooltip","tooltipText","getValue","popperInstance","createPopper","modifiers","name","options","offset","tooltipTextContent","setAttribute","update","cellMouseLeave","removeAttribute","pageLen","document","createElement","addClass","tabulatorPageSize","insertAfter","len","innerText","pageLength","appendTo","createNumPages","page","num","remove","setPage","tabulatorPageButtons","newId","slice","tooltipDiv","appendChild","arrowDiv","tableDiv","button","pages","next","parseInt","last","beforeRouteEnter","from","path","mounted","vueTable","remoteCols","computed","insPolicyNumber","state","watch","watchApiCall","console","log","methods","component"],"mappings":"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","file":"js/testpageforremotetabulator.cd55bc8c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('SectionTitle',{attrs:{\"title\":_vm.sectionTitle}}),_c('div',{staticClass:\"content-card\"},[_c('div',{staticClass:\"card-inner\"},[_c('div',{staticClass:\"card-detail\"},[_c('Accordion',{attrs:{\"id\":\"remote-acc1\",\"title\":\"體檢原因資料\"}},[_c('div',{attrs:{\"id\":\"remotetable\"}}),_c('button',{on:{\"click\":_vm.remotePaginationCall}},[_vm._v(\"Call API\")])])],1)])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import * as $ from 'jquery';\r\nimport Tabulator from 'tabulator-tables';\r\nimport {\r\n    createPopper\r\n} from \"@popperjs/core\";\r\n\r\nexport function createRemoteTable(id, cols, data, vm) {\r\n    // initialize table\r\n    let table = new Tabulator(`${id}`, {\r\n        data: data,\r\n        //autoColumns: true,\r\n        layout: \"fitColumns\",\r\n        height: \"255px\",\r\n        //\r\n        pagination: \"remote\", //enable remote pagination\r\n        ajaxURL: \"http://localhost:10202/commonController/tabulatorDatas?pageNo=1&size=1000\", //set url for ajax request\r\n        ajaxConfig: {\r\n            method: \"POST\",\r\n            mode: \"cors\", //set request mode to cors\r\n            //credentials: \"same-origin\", //send cookies with the request from the matching origin\r\n        },\r\n        //ajaxParams:{token:\"ABC123\"}, //set any standard parameters to pass with the request\r\n        paginationSize: 10, //optional parameter to request a certain number of rows per page\r\n        //paginationInitialPage:2, //optional parameter to set the initial page to load\r\n        //\r\n        //paginationSize: 5,\r\n        //paginationSizeSelector: [5, 10, 30, 50, true]\r\n        movableColumns: true,\r\n        resizableRows: true,\r\n        columns: cols,\r\n        tableBuilt() {\r\n            //filterTable();\r\n            createTooltips();\r\n        },\r\n        rowClick: function (e, row) {\r\n            let data = row.getData();\r\n            let id = row.getData().id;\r\n            vm.$store.commit(\"setInsPolicyNumber\", data[\"a\"]);\r\n            vm.$store.commit(\"setApplicant\", `${id}_${data[\"f\"]}`);\r\n            vm.$store.commit(\"setAssured\", `${id}_${data[\"g\"]}`);\r\n            vm.$store.commit(\"setSingleInsPolicyData\", data);\r\n        },\r\n        dataLoaded: function (data) {\r\n            let lenDiv = $(`${id}`).find(\".tabulator-len\");\r\n            $(lenDiv).text(`， 總共 ${data.length} 筆，第 `);\r\n            let pagination = $(`${id}`).find(\".tabulator-page-size\");\r\n            let pageSelect = $(`${id}`).find(\".tabulator-page-num\");\r\n            $(pageSelect).empty(); //empty options in select\r\n            let selected = pagination.children(\"option:selected\").val();\r\n            let numPages = Math.ceil(data.length / selected);\r\n            //create options in select\r\n            for (let i = 0; i < numPages; i++) {\r\n                $(pageSelect).append($(\"<option>\").attr('value', i + 1).text(i + 1));\r\n            }\r\n        },\r\n        dataFiltered: function (filters, rows) {\r\n            //filters - array of filters currently applied\r\n            //rows - array of row components that pass the filters\r\n            let lenDiv = $(`${id}`).find(\".tabulator-len\");\r\n            $(lenDiv).text(`， 總共 ${rows.length} 筆，第 `);\r\n            let pagination = $(`${id}`).find(\".tabulator-page-size\");\r\n            let pageSelect = $(`${id}`).find(\".tabulator-page-num\");\r\n            $(pageSelect).empty(); //empty options in select\r\n            let selected = pagination.children(\"option:selected\").val();\r\n            let numPages = Math.ceil(rows.length / selected);\r\n            //create options in select\r\n            for (let i = 0; i < numPages; i++) {\r\n                $(pageSelect).append($(\"<option>\").attr('value', i + 1).text(i + 1));\r\n            }\r\n        },\r\n        cellMouseEnter: function (e, cell) {\r\n            //setup tooltips\r\n            const cellEl = cell.getElement();\r\n            let tooltip = $(`${id}-tooltip`)[0];\r\n            let tooltipText = cell.getValue();\r\n            let popperInstance = createPopper(cellEl, tooltip, {\r\n                modifiers: [{\r\n                    name: \"offset\",\r\n                    options: {\r\n                        offset: [0, 8],\r\n                    },\r\n                }, ],\r\n            });\r\n            let tooltipTextContent = $(`${id}-tooltipTextContent`);\r\n            $(tooltipTextContent).text(`${tooltipText}`);\r\n            tooltip.setAttribute(\"data-show\", \"\");\r\n            popperInstance.update();\r\n        },\r\n        cellMouseLeave: function (e, cell) {\r\n            let tooltip = $(`${id}-tooltip`)[0];\r\n            tooltip.removeAttribute(\"data-show\");\r\n        }\r\n    })\r\n\r\n\r\n    // create and display div element - total number of entries\r\n    let pageLen = document.createElement(\"div\");\r\n    $(pageLen).addClass(\"page-length\");\r\n    let tabulatorPageSize = $(`${id}`).find(\".tabulator-page-size\")[0];\r\n    $(pageLen).insertAfter(tabulatorPageSize);\r\n    let len = document.createElement(\"p\");\r\n    $(len).addClass(\"tabulator-len\")\r\n    len.innerText = `， 總共 ${table.getData().length} 筆，第 `;\r\n    let pageLength = $(`${id}`).find(\".page-length\")[0];\r\n    $(len).appendTo(pageLength);\r\n\r\n    // create and display dropdown element - page selection\r\n    let pagination = $(`${id}`).find(\".tabulator-page-size\");\r\n    let pageSelect = document.createElement(\"select\");\r\n    $(pageSelect).addClass(\"tabulator-page-num\");\r\n    $(pageSelect).insertAfter(pageLen)\r\n    createNumPages(pagination, table, pageSelect);\r\n\r\n    // create and display div element - 頁\r\n    let page = document.createElement(\"div\");\r\n    $(page).addClass(\"page-num\");\r\n    $(page).insertAfter(pageSelect)\r\n    let num = document.createElement(\"p\");\r\n    num.innerText = ` 頁 `;\r\n    $(num).appendTo(page);\r\n\r\n    // change the total number of pages based on the number of rows displayed in a page\r\n    $(pagination).on('change', function () {\r\n        $(pageSelect).find('option').remove();\r\n        createNumPages(pagination, table, pageSelect);\r\n    });\r\n\r\n    // go to the selected page\r\n    $(pageSelect).on('change', function () {\r\n        let selected = $(pageSelect).children(\"option:selected\").val();\r\n        table.setPage(selected);\r\n    });\r\n\r\n    // change the selected page based on the button clicked\r\n    let tabulatorPageButtons = $(`${id}`).find(\".tabulator-page\");\r\n    tabulatorPageButtons.on('click', function () {\r\n        let button = $(this).attr(\"data-page\");\r\n        let pages = $(`${id}`).find(\".tabulator-page-num\");\r\n        let selected = pages.children(\"option:selected\").val();\r\n\r\n        if (button == 'prev') {\r\n            $(pageSelect).val(selected - 1);\r\n        } else if (button == 'next') {\r\n            let next = parseInt(selected) + 1;\r\n            $(pageSelect).val(next);\r\n        } else if (button == 'first') {\r\n            $(pageSelect).val(1);\r\n        } else {\r\n            let last = $(`${id}`).find('.tabulator-page-num option:last').val();\r\n            $(pageSelect).val(last);\r\n        }\r\n    });\r\n\r\n    // filter function for the table\r\n    function filterTable() {\r\n        function matchAny(data, filterParams) {\r\n            var match = false;\r\n            for (var key in data) {\r\n                let newData = \"\";\r\n                if (typeof data[key] === \"number\") {\r\n                    newData = data[key].toString();\r\n                } else {\r\n                    newData = data[key]\r\n                }\r\n\r\n                if (newData && newData.includes(filterParams.value)) { // data[key] === filterParams.value\r\n                    match = true;\r\n                }\r\n            }\r\n            return match;\r\n        }\r\n\r\n        const filterInput = $(`${id}-tableFilter`)[0];\r\n        filterInput.addEventListener(\"keyup\", () => {\r\n            table.setFilter(matchAny, {\r\n                value: filterInput.value\r\n            });\r\n            if (filterInput.value == \"\") {\r\n                table.clearFilter();\r\n            }\r\n        });\r\n    }\r\n\r\n    function createTooltips() {\r\n        let newId = id.slice(1);\r\n        let tooltipDiv = document.createElement(\"div\");\r\n        $(tooltipDiv).addClass(\"tabulator-tooltip\");\r\n        $(tooltipDiv).attr(\"id\", `${newId}-tooltip`);\r\n        $(tooltipDiv).attr(\"role\", \"tooltip\");\r\n        const tooltipTextContent = document.createElement(\"span\");\r\n        $(tooltipTextContent).text(\"\");\r\n        $(tooltipTextContent).attr(\"id\", `${newId}-tooltipTextContent`)\r\n        tooltipDiv.appendChild(tooltipTextContent);\r\n        let arrowDiv = document.createElement(\"div\");\r\n        $(arrowDiv).addClass(\"tabulator-arrow-tooltip\");\r\n        $(arrowDiv).attr(\"id\", `${newId}-tooltipArrow`)\r\n        tooltipDiv.appendChild(arrowDiv);\r\n        let tableDiv = $(`${id}`);\r\n        $(tooltipDiv).insertAfter(tableDiv);\r\n    }\r\n\r\n    return table;\r\n}\r\n\r\n// calculate the total number of pages based on the number of rows displayed in a page\r\nfunction createNumPages(pagination, table, pageSelect) {\r\n    let selected = pagination.children(\"option:selected\").val();\r\n    let numPages = Math.ceil(table.getData().length / selected);\r\n    for (let i = 0; i < numPages; i++) {\r\n        $(pageSelect).append($(\"<option>\").attr('value', i + 1).text(i + 1));\r\n    }\r\n}\r\n\r\n\r\n\r\n// show and hide columns based on selection\r\nexport function showCols(showCols, totalCols, table) {\r\n    //showCols => columns to show\r\n    // loop through totalCols\r\n    for (let i = 0; i < totalCols.length; i++) {\r\n        if (showCols.includes(totalCols[i].value)) {\r\n            table.showColumn(totalCols[i].value)\r\n        } else {\r\n            table.hideColumn(totalCols[i].value)\r\n        }\r\n    }\r\n    table.redraw(true);\r\n}","<template>\r\n  <!-- 09 -->\r\n  <div>\r\n    <SectionTitle :title=\"sectionTitle\" />\r\n    <div class=\"content-card\">\r\n      <div class=\"card-inner\">\r\n        <div class=\"card-detail\">\r\n          <Accordion id=\"remote-acc1\" title=\"體檢原因資料\">\r\n            <div id=\"remotetable\"></div>\r\n            <button @click=\"remotePaginationCall\">Call API</button>\r\n          </Accordion>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { v4 as uuid } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\nimport { createRemoteTable } from \"../helperFunctions/remotePaginationTable.js\";\r\n\r\nexport default {\r\n  name: \"TestPageForRemoteTabulator\",\r\n  beforeRouteEnter(to, from, next) {\r\n    next((vm) => {\r\n      vm.$store.commit(\"setHistory\", {\r\n        name: from.name,\r\n        path: from.path,\r\n        id: uuid(),\r\n      });\r\n    });\r\n  },\r\n  mounted() {\r\n    const vm = this;\r\n    this.vueTable = createRemoteTable(\"#remotetable\", this.remoteCols, [], vm);\r\n  },\r\n  computed: {\r\n    insPolicyNumber() {\r\n      return this.$store.state.insPolicyNumber;\r\n    },\r\n  },\r\n  watch: {\r\n    insPolicyNumber(newVal, oldVal) {\r\n      //call api to set table1Data\r\n      this.watchApiCall();\r\n      console.log(`newVal: ${newVal} \\n oldVal: ${oldVal}`);\r\n    },\r\n  },\r\n  methods: {\r\n    async watchApiCall() {\r\n      console.log(\"callApi\");\r\n    },\r\n    async remotePaginationCall() {\r\n      let url = \"http://localhost:10202/commonController/tabulatorDatas\";\r\n      const params = {\r\n        pageNo: 1,\r\n        size: 1000,\r\n      };\r\n      const headers = {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      };\r\n      try {\r\n        const res = await axios.post(url, qs.stringify(params), { headers });\r\n        console.log(res);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n\r\n      //   const params = new URLSearchParams({\r\n      //     pageNo: 1,\r\n      //     size: 1000,\r\n      //   }).toString();\r\n      //const res = await axios.post(url, params);\r\n    //   console.log(res);\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      vueTable: null,\r\n      sectionTitle: \"體檢批註告知\",\r\n      remoteCols: [\r\n        { field: \"id\", title: \"ID\" },\r\n        { field: \"first\", title: \"FIRST NAME\" },\r\n        { field: \"last\", title: \"LAST NAME\" },\r\n        { field: \"age\", title: \"AGE\" },\r\n      ],\r\n    };\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TestPageForRemoteTabulator.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TestPageForRemoteTabulator.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TestPageForRemoteTabulator.vue?vue&type=template&id=f7354716&\"\nimport script from \"./TestPageForRemoteTabulator.vue?vue&type=script&lang=js&\"\nexport * from \"./TestPageForRemoteTabulator.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}